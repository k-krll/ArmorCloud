[
  {
    "category": "C#",
    "question": "Что такое делегат в C#?",
    "options": [
      { "text": "Тип, представляющий ссылку на метод", "tag": "green", "explain": "Делегат — это тип, который представляет ссылку на метод с определённой сигнатурой." },
      { "text": "Тип коллекции", "tag": "red", "explain": "Это неверно. Делегат не является коллекцией." },
      { "text": "Класс для работы с файлами", "tag": "yellow", "explain": "Это не совсем так. Делегат не связан с файлами." },
      { "text": "Тип исключения", "tag": "red", "explain": "Это неверно. Делегат не связан с исключениями." },
      { "text": "Нет нужного ответа", "tag": "none", "explain": "Если не знаете — ничего страшного, это базовый вопрос." }
    ]
  },
  {
    "category": "C#",
    "question": "Что делает ключевое слово 'using' в C#?",
    "options": [
      { "text": "Импортирует пространство имён", "tag": "green", "explain": "'using' позволяет импортировать пространство имён для использования его типов." },
      { "text": "Создаёт цикл", "tag": "red", "explain": "'using' не используется для создания циклов." },
      { "text": "Объявляет переменную", "tag": "yellow", "explain": "'using' может использоваться для объявления переменной с автоматическим освобождением ресурсов, но не только для этого." },
      { "text": "Завершает программу", "tag": "red", "explain": "'using' не завершает программу." },
      { "text": "Нет нужного ответа", "tag": "none", "explain": "Если не знаете — ничего страшного." }
    ]
  },
  {
    "category": "C#",
    "question": "Что такое событие (event) в C#?",
    "options": [
      { "text": "Механизм уведомления подписчиков", "tag": "green", "explain": "Событие — это механизм уведомления подписчиков о наступлении определённого действия." },
      { "text": "Тип данных", "tag": "yellow", "explain": "Событие — это не тип данных, а механизм." },
      { "text": "Оператор сравнения", "tag": "red", "explain": "Событие не является оператором сравнения." },
      { "text": "Класс для работы с датой", "tag": "red", "explain": "Событие не связано с датой." },
      { "text": "Нет нужного ответа", "tag": "none", "explain": "Если не знаете — ничего страшного." }
    ]
  },
  {
    "category": "C#",
    "question": "Какой модификатор доступа делает член класса доступным только внутри этого класса?",
    "options": [
      { "text": "private", "tag": "green", "explain": "'private' ограничивает доступ только внутри класса." },
      { "text": "public", "tag": "red", "explain": "'public' делает член доступным везде." },
      { "text": "protected", "tag": "yellow", "explain": "'protected' доступен в наследниках, но не только внутри класса." },
      { "text": "internal", "tag": "red", "explain": "'internal' доступен внутри сборки." },
      { "text": "Нет нужного ответа", "tag": "none", "explain": "Если не знаете — ничего страшного." }
    ]
  },
  {
    "category": "C#",
    "question": "Что такое абстрактный класс?",
    "options": [
      { "text": "Класс, от которого нельзя создать экземпляр", "tag": "green", "explain": "Абстрактный класс нельзя инстанцировать напрямую." },
      { "text": "Класс, который нельзя наследовать", "tag": "red", "explain": "Абстрактный класс можно наследовать." },
      { "text": "Класс без методов", "tag": "red", "explain": "Абстрактный класс может содержать методы." },
      { "text": "Класс только с приватными полями", "tag": "yellow", "explain": "Это не определяет абстрактный класс." },
      { "text": "Нет нужного ответа", "tag": "none", "explain": "Если не знаете — ничего страшного." }
    ]
  },
  {
    "category": "C#",
    "question": "Что делает оператор '??' в C#?",
    "options": [
      { "text": "Возвращает значение по умолчанию, если левый операнд равен null", "tag": "green", "explain": "Оператор '??' возвращает правый операнд, если левый равен null." },
      { "text": "Проверяет равенство", "tag": "red", "explain": "'??' не сравнивает значения." },
      { "text": "Создаёт новый объект", "tag": "yellow", "explain": "'??' не создаёт объект, а возвращает значение." },
      { "text": "Завершает цикл", "tag": "red", "explain": "'??' не завершает цикл." },
      { "text": "Нет нужного ответа", "tag": "none", "explain": "Если не знаете — ничего страшного." }
    ]
  },
  {
    "category": "C#",
    "question": "Что такое LINQ?",
    "options": [
      { "text": "Язык запросов к данным", "tag": "green", "explain": "LINQ — это язык интегрированных запросов к данным." },
      { "text": "Тип коллекции", "tag": "red", "explain": "LINQ — это не коллекция, а язык запросов." },
      { "text": "Механизм сериализации", "tag": "yellow", "explain": "LINQ не занимается сериализацией, но может использоваться с сериализуемыми объектами." },
      { "text": "Среда выполнения", "tag": "red", "explain": "LINQ не является средой выполнения." },
      { "text": "Нет нужного ответа", "tag": "none", "explain": "Если не знаете — ничего страшного." }
    ]
  },
  {
    "category": "C#",
    "question": "Что делает ключевое слово 'async'?",
    "options": [
      { "text": "Позволяет выполнять асинхронные операции", "tag": "green", "explain": "'async' позволяет объявлять асинхронные методы." },
      { "text": "Создаёт поток", "tag": "yellow", "explain": "'async' не создаёт поток, но может использоваться с многопоточностью." },
      { "text": "Объявляет интерфейс", "tag": "red", "explain": "'async' не объявляет интерфейс." },
      { "text": "Завершает метод", "tag": "red", "explain": "'async' не завершает метод." },
      { "text": "Нет нужного ответа", "tag": "none", "explain": "Если не знаете — ничего страшного." }
    ]
  },
  {
    "category": "ASP.NET",
    "question": "Что такое Middleware в ASP.NET Core?",
    "options": [
      { "text": "Компонент обработки HTTP-запросов", "tag": "green", "explain": "Middleware — это компонент, обрабатывающий HTTP-запросы в конвейере." },
      { "text": "База данных", "tag": "red", "explain": "Middleware не является базой данных." },
      { "text": "Тип контроллера", "tag": "yellow", "explain": "Middleware не является контроллером, но может взаимодействовать с ними." },
      { "text": "Механизм маршрутизации", "tag": "yellow", "explain": "Middleware может участвовать в маршрутизации, но не является только этим." },
      { "text": "Нет нужного ответа", "tag": "none", "explain": "Если не знаете — ничего страшного." }
    ]
  },
  {
    "category": "ASP.NET",
    "question": "Для чего используется Dependency Injection?",
    "options": [
      { "text": "Внедрение зависимостей в классы", "tag": "green", "explain": "Dependency Injection — это паттерн внедрения зависимостей." },
      { "text": "Создание базы данных", "tag": "red", "explain": "Dependency Injection не создаёт базы данных." },
      { "text": "Обработка ошибок", "tag": "yellow", "explain": "Dependency Injection не занимается обработкой ошибок напрямую." },
      { "text": "Сериализация данных", "tag": "yellow", "explain": "Dependency Injection не занимается сериализацией." },
      { "text": "Нет нужного ответа", "tag": "none", "explain": "Если не знаете — ничего страшного." }
    ]
  },
  {
    "category": "C#",
    "question": "Какой из следующих способов может быть использован для копирования массива в C#?",
    "options": [
      { "text": "Array.Copy", "tag": "yellow", "explain": "Array.Copy — стандартный способ копирования массива." },
      { "text": "Buffer.BlockCopy", "tag": "yellow", "explain": "Buffer.BlockCopy может использоваться для копирования массивов примитивов." },
      { "text": "Array.Clone", "tag": "yellow", "explain": "Array.Clone возвращает поверхностную копию массива." },
      { "text": "LINQ .ToArray()", "tag": "yellow", "explain": "LINQ .ToArray() создаёт новый массив на основе существующего." }
    ],
    "requireExplanation": true
  },
  {
    "category": "C#",
    "question": "Какой из перечисленных вариантов НЕ является типом коллекции в C#?",
    "options": [
      { "text": "List<T>", "tag": "red", "explain": "List<T> — это коллекция." },
      { "text": "Dictionary<TKey, TValue>", "tag": "red", "explain": "Dictionary<TKey, TValue> — это коллекция." },
      { "text": "Queue<T>", "tag": "red", "explain": "Queue<T> — это коллекция." },
      { "text": "Нет нужного ответа", "tag": "green", "explain": "Все перечисленные — коллекции. Верный ответ: 'нет нужного ответа'." }
    ]
  }
] 